*** CreatureAI.cpp.old	2011-11-26 23:59:43.295000000 +0100
--- CreatureAI.cpp	2011-12-06 20:55:47.183550000 +0100
***************
*** 25,30 ****
--- 25,31 ----
  #include "Log.h"
  #include "MapReference.h"
  #include "Player.h"
+ #include "Group.h"
  
  //Disable CreatureAI when charmed
  void CreatureAI::OnCharmed(bool /*apply*/)
***************
*** 110,115 ****
--- 111,166 ----
      }
  }
  
+ void CreatureAI::DoAttackerAreaInCombat(Unit* attacker, float range, Unit* pUnit)
+ {
+     if (!attacker)
+         attacker = me;
+ 
+     if (!pUnit)
+         pUnit = me;
+ 
+     Map *map = pUnit->GetMap();
+ 
+     if (!map->IsDungeon())
+         return;
+ 
+     if (!pUnit->CanHaveThreatList() || pUnit->getThreatManager().isThreatListEmpty())
+         return;
+ 
+     Map::PlayerList const &PlayerList = map->GetPlayers();
+     for(Map::PlayerList::const_iterator i = PlayerList.begin(); i != PlayerList.end(); ++i)
+     {
+         if (Player* i_pl = i->getSource())
+             if (i_pl->isAlive() && attacker->GetDistance(i_pl) <= range )
+             {
+                 pUnit->SetInCombatWith(i_pl);
+                 i_pl->SetInCombatWith(pUnit);
+                 pUnit->AddThreat(i_pl, 0.0f);
+             }
+     }
+ }
+ 
+ void CreatureAI::DoAttackerGroupInCombat(Player* attacker)
+ {
+     if(attacker)
+     {
+         if( Group *pGroup = attacker->GetGroup() )
+         {
+             for(GroupReference *itr = pGroup->GetFirstMember(); itr != NULL; itr = itr->next())
+             {
+                 Player *pGroupGuy = itr->getSource();
+ 
+                 if(pGroupGuy && pGroupGuy->isAlive() && pGroupGuy->GetMapId() == me->GetMapId())
+                 {
+                     me->SetInCombatWith(pGroupGuy);
+                     pGroupGuy->SetInCombatWith(me);
+                     me->AddThreat(pGroupGuy, 0.0f);
+                 }
+             }
+         }
+     }
+ }
+ 
  // scripts does not take care about MoveInLineOfSight loops
  // MoveInLineOfSight can be called inside another MoveInLineOfSight and cause stack overflow
  void CreatureAI::MoveInLineOfSight_Safe(Unit* who)
