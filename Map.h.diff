*** Map.h.old	2011-12-10 23:49:44.268550000 +0100
--- Map.h	2011-12-06 20:55:48.428550000 +0100
***************
*** 200,205 ****
--- 200,229 ----
  #pragma pack(push, 1)
  #endif
  
+ class DynamicLOSObject
+ {
+     public:
+         DynamicLOSObject();
+         bool IsBetween(float x, float y, float z, float x2, float y2, float z2);
+         bool IsInside(float x, float y);
+         bool IsOverOrUnder(float z);
+         float GetDistance(float x, float y);
+         bool IsActive();
+         void SetActiveState(bool state);
+         void SetCoordinates(float x, float y);
+         void SetZ(float z);
+         void SetRadius(float r);
+         void SetHeight(float h);
+         bool HasHeightInfo();
+     private:
+         float _x;
+         float _y;
+         float _z;
+         float _height;
+         float _radius;
+         bool _active;
+ };
+ 
  struct InstanceTemplate
  {
      uint32 Parent;
***************
*** 424,429 ****
--- 448,468 ----
  
          InstanceMap* ToInstanceMap(){ if (IsDungeon())  return reinterpret_cast<InstanceMap*>(this); else return NULL;  }
          const InstanceMap* ToInstanceMap() const { if (IsDungeon())  return (const InstanceMap*)((InstanceMap*)this); else return NULL;  }
+     /*
+      **********************
+      * DYNAMIC LOS SYSTEM *
+      **********************
+     */
+     public:
+         uint32 AddDynLOSObject(float x, float y, float radius);
+         uint32 AddDynLOSObject(float x, float y, float z, float radius, float height);
+         void SetDynLOSObjectState(uint32 id, bool state);
+         bool GetDynLOSObjectState(uint32 id);
+         bool IsInDynLOS(float x, float y, float z, float x2, float y2, float z2);
+     private:
+         std::map<uint32, DynamicLOSObject*> m_dynamicLOSObjects;
+         uint32 m_dynamicLOSCounter;
+     /* END */
      private:
          void LoadMapAndVMap(int gx, int gy);
          void LoadVMap(int gx, int gy);
